<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.school.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.school.bean.User" >
    <id column="account" property="account" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="SMALLINT" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="credit" property="credit" jdbcType="INTEGER" />
    <result column="otheraccount" property="otheraccount" jdbcType="VARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where account = #{account,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.school.bean.User" >
    insert into user (account, name, age, 
      sex, school, password, 
      path, credit, otheraccount
      )
    values (#{account,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=SMALLINT}, 
      #{sex,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{path,jdbcType=VARCHAR}, #{credit,jdbcType=INTEGER}, #{otheraccount,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.school.bean.User" >
    update user
    set name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=SMALLINT},
      sex = #{sex,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      credit = #{credit,jdbcType=INTEGER},
      otheraccount = #{otheraccount,jdbcType=VARCHAR}
    where account = #{account,jdbcType=INTEGER}
  </update>
  <update id="updateUserByAccount" parameterType="com.school.bean.User">
    update  user
    set  credit = #{credit,jdbcType=INTEGER}
    where account = #{account,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select account, name, age, sex, school, password, path, credit, otheraccount
    from user
    where account = #{account,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select account, name, age, sex, school, password, path, credit, otheraccount
    from user
  </select>
  <select id="selectByAccoAndPass" parameterType="com.school.bean.User" resultMap="BaseResultMap">
    select account, name, age, sex, school, password, path, credit, otheraccount
    from  user where  account=#{account} and password=#{password}
  </select>
  <select id="total" resultType="int">
    select count(*) from user
  </select>
  <select id="selectLimit" resultMap="BaseResultMap">
    select * from user
    <if test="start!=null and count!=null">
      limit #{start},#{count}
    </if>
  </select>
  <select id="selectByName" resultMap="BaseResultMap">
    select * from  user
    <where>and  name like concat('%',#{0},'%')</where>
  </select>
  <select id="selectByAccount" resultMap="BaseResultMap">
    select * from user
    <where>and account=#{account}</where>
  </select>

</mapper>